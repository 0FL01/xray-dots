map $http_upgrade $connection_upgrade {
    default upgrade;
    "" close;
}

ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
ssl_session_timeout 1d;
ssl_session_cache shared:MozSSL:10m;
ssl_session_tickets off;
ssl_stapling off;
ssl_stapling_verify off;
resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
resolver_timeout 2s;

proxy_hide_header Strict-Transport-Security;
add_header Strict-Transport-Security "max-age=15552000" always;

# Оптимизация для стриминга
client_max_body_size 100m;
client_body_buffer_size 1m;
client_body_timeout 60s;
client_header_timeout 60s;
send_timeout 60s;

# Буферы для больших ответов (стриминг)
proxy_buffers 8 64k;
proxy_buffer_size 64k;
proxy_busy_buffers_size 128k;
proxy_temp_file_write_size 128k;
proxy_max_temp_file_size 1024m;

# Оптимизация gzip для стриминга (отключаем для видео)
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_min_length 256;
gzip_types
application/atom+xml
application/geo+json
application/javascript
application/x-javascript
application/json
application/ld+json
application/manifest+json
application/rdf+xml
application/rss+xml
application/xhtml+xml
application/xml
font/eot
font/otf
font/ttf
image/svg+xml
text/css
text/javascript
text/plain
text/xml;

# НЕ сжимаем видео контент
gzip_disable "MSIE [1-6]\.";

# Upstream для AdGuard Home
upstream adguard_upstream {
    server 127.0.0.1:3000;
    keepalive 64;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}

server {
    server_name REPLACE_DOMAIN;

    listen unix:/dev/shm/nginx.sock ssl;
    http2 on;

    set_real_ip_from 127.0.0.1;
    real_ip_header proxy_protocol;

    ssl_certificate "/etc/nginx/ssl/fullchain.pem";
    ssl_certificate_key "/etc/nginx/ssl/privkey.key";
    ssl_trusted_certificate "/etc/nginx/ssl/fullchain.pem";

    # Проксирование всех запросов на AdGuard Home
    location / {
        proxy_pass http://adguard_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Поддержка WebSocket для real-time обновлений
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Критично для стриминга: отключаем буферизацию
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_cache_bypass $http_upgrade;
        
        # Увеличиваем таймауты для стриминга
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Поддержка Range requests для видео
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
        proxy_no_cache $http_range $http_if_range;
        
        # Передача исходного IP
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Server $host;
        
        # Поддержка chunked transfer encoding
        proxy_set_header Transfer-Encoding $http_transfer_encoding;
        
        # Важно для YouTube: передаем User-Agent
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header Accept $http_accept;
        proxy_set_header Accept-Encoding $http_accept_encoding;
        proxy_set_header Accept-Language $http_accept_language;
        proxy_set_header Referer $http_referer;
        
        # Отключаем кеширование для динамического контента
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
}

server {
    server_name _;

    listen unix:/dev/shm/nginx.sock ssl default_server;
    http2 on;

    ssl_reject_handshake on;
} 
